{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  bun: null,\n  mains: []\n};\nconst constructorSlice = createSlice({\n  name: 'constructor',\n  initialState,\n  reducers: {\n    setBun(state, action) {\n      try {\n        state.bun = action.payload;\n      } catch (error) {\n        console.error('Error in setBun:', error);\n        state.bun = null;\n      }\n    },\n    addIngredient(state, action) {\n      try {\n        if (action.payload.type === 'bun') {\n          state.bun = action.payload;\n        } else {\n          if (!Array.isArray(state.mains)) {\n            state.mains = [];\n          }\n          state.mains.push({\n            ...action.payload\n          });\n        }\n      } catch (error) {\n        console.error('Error in addIngredient:', error);\n        if (!Array.isArray(state.mains)) {\n          state.mains = [];\n        }\n      }\n    },\n    removeIngredient(state, action) {\n      if (state.bun && state.bun._id === action.payload) {\n        state.bun = null;\n      } else {\n        if (!Array.isArray(state.mains)) {\n          state.mains = [];\n        } else {\n          const idx = state.mains.findIndex(ingredient => ingredient._id === action.payload);\n          if (idx !== -1) {\n            state.mains.splice(idx, 1);\n          }\n        }\n      }\n    },\n    reorderIngredients(state, action) {\n      try {\n        const {\n          from,\n          to\n        } = action.payload;\n        if (!Array.isArray(state.mains)) {\n          state.mains = [];\n        }\n        if (from >= 0 && from < state.mains.length && to >= 0 && to <= state.mains.length) {\n          const [movedItem] = state.mains.splice(from, 1);\n          state.mains.splice(to, 0, movedItem);\n        }\n      } catch (error) {\n        console.error('Error in reorderIngredients:', error);\n        if (!Array.isArray(state.mains)) {\n          state.mains = [];\n        }\n      }\n    },\n    clearConstructor(state) {\n      try {\n        state.bun = null;\n        state.mains = [];\n      } catch (error) {\n        console.error('Error in clearConstructor:', error);\n        state.bun = null;\n        state.mains = [];\n      }\n    }\n  }\n});\nconsole.log(constructorSlice.reducer);\nexport const {\n  setBun,\n  addIngredient,\n  removeIngredient,\n  reorderIngredients,\n  clearConstructor\n} = constructorSlice.actions;\nexport default constructorSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","bun","mains","constructorSlice","name","reducers","setBun","state","action","payload","error","console","addIngredient","type","Array","isArray","push","removeIngredient","_id","idx","findIndex","ingredient","splice","reorderIngredients","from","to","length","movedItem","clearConstructor","log","reducer","actions"],"sources":["/Users/olegbagryantsev/development/react-burger 2/src/services/constructorSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { TIngredient } from '../types/ingredient';\r\n\r\ninterface ConstructorState {\r\n  bun: TIngredient | null;\r\n  mains: TIngredient[];\r\n}\r\n\r\nconst initialState: ConstructorState = {\r\n  bun: null,\r\n  mains: [],\r\n};\r\n\r\nconst constructorSlice = createSlice({\r\n  name: 'constructor',\r\n  initialState,\r\n  reducers: {\r\n    setBun(state, action: PayloadAction<TIngredient>) {\r\n      try {\r\n        state.bun = action.payload;\r\n      } catch (error) {\r\n        console.error('Error in setBun:', error);\r\n        state.bun = null;\r\n      }\r\n    },\r\n    addIngredient(state, action: PayloadAction<TIngredient>) {\r\n      try {\r\n        if (action.payload.type === 'bun') {\r\n          state.bun = action.payload;\r\n        } else {\r\n          if (!Array.isArray(state.mains)) {\r\n            state.mains = [];\r\n          }\r\n          state.mains.push({ \r\n            ...action.payload, \r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error in addIngredient:', error);\r\n        if (!Array.isArray(state.mains)) {\r\n          state.mains = [];\r\n        }\r\n      }\r\n\r\n    },\r\n    removeIngredient(state, action: PayloadAction<string>) {\r\n      if (state.bun && state.bun._id === action.payload) {\r\n        state.bun = null;\r\n      } else {\r\n        if (!Array.isArray(state.mains)) {\r\n          state.mains = [];\r\n        } else {\r\n          const idx = state.mains.findIndex(ingredient => ingredient._id === action.payload);\r\n          if (idx !== -1) {\r\n            state.mains.splice(idx, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    reorderIngredients(state, action: PayloadAction<{ from: number; to: number }>) {\r\n      try {\r\n        const { from, to } = action.payload;\r\n        \r\n        if (!Array.isArray(state.mains)) {\r\n          state.mains = [];\r\n        }\r\n        \r\n        if (from >= 0 && from < state.mains.length && \r\n            to >= 0 && to <= state.mains.length) {\r\n          const [movedItem] = state.mains.splice(from, 1);\r\n          state.mains.splice(to, 0, movedItem);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error in reorderIngredients:', error);\r\n        if (!Array.isArray(state.mains)) {\r\n          state.mains = [];\r\n        }\r\n      }\r\n    },\r\n    clearConstructor(state) {\r\n      try {\r\n        state.bun = null;\r\n        state.mains = [];\r\n      } catch (error) {\r\n        console.error('Error in clearConstructor:', error);\r\n        state.bun = null;\r\n        state.mains = [];\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconsole.log(constructorSlice.reducer);\r\nexport const { setBun, addIngredient, removeIngredient, reorderIngredients, clearConstructor } = constructorSlice.actions;\r\nexport type { ConstructorState };\r\nexport default constructorSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}