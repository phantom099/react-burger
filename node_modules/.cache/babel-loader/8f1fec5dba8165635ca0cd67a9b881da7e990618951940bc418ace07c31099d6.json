{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  email: '',\n  name: '',\n  isAuth: false,\n  loading: false,\n  error: null\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action) {\n      state.email = action.payload.email;\n      state.name = action.payload.name;\n      state.isAuth = true;\n      state.error = null;\n    },\n    clearUser(state) {\n      state.email = '';\n      state.name = '';\n      state.isAuth = false;\n      state.error = null;\n    },\n    setLoading(state, action) {\n      state.loading = action.payload;\n    },\n    setError(state, action) {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  setUser,\n  clearUser,\n  setLoading,\n  setError\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","email","name","isAuth","loading","error","userSlice","reducers","setUser","state","action","payload","clearUser","setLoading","setError","actions","reducer"],"sources":["/Users/olegbagryantsev/development/react-burger 2/src/services/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface UserState {\r\n  email: string;\r\n  name: string;\r\n  isAuth: boolean;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  email: '',\r\n  name: '',\r\n  isAuth: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUser(state, action: PayloadAction<{ email: string; name: string }>) {\r\n      state.email = action.payload.email;\r\n      state.name = action.payload.name;\r\n      state.isAuth = true;\r\n      state.error = null;\r\n    },\r\n    clearUser(state) {\r\n      state.email = '';\r\n      state.name = '';\r\n      state.isAuth = false;\r\n      state.error = null;\r\n    },\r\n    setLoading(state, action: PayloadAction<boolean>) {\r\n      state.loading = action.payload;\r\n    },\r\n    setError(state, action: PayloadAction<string | null>) {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, clearUser, setLoading, setError } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAU7D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZF,YAAY;EACZO,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAsD,EAAE;MACrED,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACV,KAAK;MAClCQ,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO,CAACT,IAAI;MAChCO,KAAK,CAACN,MAAM,GAAG,IAAI;MACnBM,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB,CAAC;IACDO,SAASA,CAACH,KAAK,EAAE;MACfA,KAAK,CAACR,KAAK,GAAG,EAAE;MAChBQ,KAAK,CAACP,IAAI,GAAG,EAAE;MACfO,KAAK,CAACN,MAAM,GAAG,KAAK;MACpBM,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB,CAAC;IACDQ,UAAUA,CAACJ,KAAK,EAAEC,MAA8B,EAAE;MAChDD,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACC,OAAO;IAChC,CAAC;IACDG,QAAQA,CAACL,KAAK,EAAEC,MAAoC,EAAE;MACpDD,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,OAAO;EAAEI,SAAS;EAAEC,UAAU;EAAEC;AAAS,CAAC,GAAGR,SAAS,CAACS,OAAO;AAC7E,eAAeT,SAAS,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}