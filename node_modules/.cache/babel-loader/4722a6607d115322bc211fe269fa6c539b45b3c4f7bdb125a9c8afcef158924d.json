{"ast":null,"code":"// ingredientsSlice.ts\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getIngredients } from '../utils/api';\nexport const fetchIngredients = createAsyncThunk('ingredients/fetchIngredients', async () => {\n  const response = await getIngredients();\n  return response;\n});\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null\n};\nconst ingredientsSlice = createSlice({\n  name: 'ingredients',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchIngredients.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchIngredients.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.loading = false;\n    }).addCase(fetchIngredients.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Failed to load ingredients';\n    });\n  }\n});\nexport default ingredientsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getIngredients","fetchIngredients","response","initialState","items","loading","error","ingredientsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/olegbagryantsev/development/react-burger 2/src/services/ingredientsSlice.ts"],"sourcesContent":["// ingredientsSlice.ts\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getIngredients } from '../utils/api';\r\nimport { TIngredient } from '../types/ingredient';\r\n\r\nexport const fetchIngredients = createAsyncThunk(\r\n  'ingredients/fetchIngredients',\r\n  async () => {\r\n    const response = await getIngredients();\r\n    return response;\r\n  }\r\n);\r\n\r\ninterface IngredientsState {\r\n  items: TIngredient[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: IngredientsState = {\r\n  items: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst ingredientsSlice = createSlice({\r\n  name: 'ingredients',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchIngredients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchIngredients.fulfilled, (state, action) => {\r\n        state.items = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchIngredients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || 'Failed to load ingredients';\r\n      });\r\n  },\r\n});\r\n\r\nexport default ingredientsSlice.reducer;"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,cAAc,QAAQ,cAAc;AAG7C,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAC9C,8BAA8B,EAC9B,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMF,cAAc,CAAC,CAAC;EACvC,OAAOE,QAAQ;AACjB,CACF,CAAC;AAQD,MAAMC,YAA8B,GAAG;EACrCC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,gBAAgB,GAAGT,WAAW,CAAC;EACnCU,IAAI,EAAE,aAAa;EACnBL,YAAY;EACZM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACX,gBAAgB,CAACY,OAAO,EAAGC,KAAK,IAAK;MAC5CA,KAAK,CAACT,OAAO,GAAG,IAAI;MACpBS,KAAK,CAACR,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDM,OAAO,CAACX,gBAAgB,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACV,KAAK,GAAGY,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACT,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDO,OAAO,CAACX,gBAAgB,CAACiB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAACT,OAAO,GAAG,KAAK;MACrBS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACa,OAAO,IAAI,4BAA4B;IACpE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,gBAAgB,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}