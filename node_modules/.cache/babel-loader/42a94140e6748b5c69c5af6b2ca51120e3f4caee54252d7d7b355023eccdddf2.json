{"ast":null,"code":"// cookie.ts — простые функции для работы с куками\n\nexport function setCookie(name, value, props) {\n  props = props || {};\n  let exp = props.expires;\n  if (typeof exp === \"number\" && exp) {\n    const d = new Date();\n    d.setTime(d.getTime() + exp * 1000);\n    exp = props.expires = d;\n  }\n  if (exp && exp.toUTCString) {\n    props.expires = exp.toUTCString();\n  }\n  value = encodeURIComponent(value);\n  let updatedCookie = name + \"=\" + value;\n  for (const propName in props) {\n    updatedCookie += \"; \" + propName;\n    const propValue = props[propName];\n    if (propValue !== true) {\n      updatedCookie += \"=\" + propValue;\n    }\n  }\n  document.cookie = updatedCookie;\n}\nexport function getCookie(name) {\n  const matches = document.cookie.match(new RegExp(\"(?:^|; )\" + name.replace(/([.$?*|{}()\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") + \"=([^;]*)\"));\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\nexport function deleteCookie(name) {\n  setCookie(name, \"\", {\n    expires: -1\n  });\n}","map":{"version":3,"names":["setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","encodeURIComponent","updatedCookie","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","deleteCookie"],"sources":["/Users/olegbagryantsev/development/react-burger 2/src/utils/cookie.ts"],"sourcesContent":["// cookie.ts — простые функции для работы с куками\r\n\r\nexport function setCookie(name: string, value: string, props?: { [key: string]: any }) {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n  if (typeof exp === \"number\" && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + \"=\" + value;\r\n  for (const propName in props) {\r\n    updatedCookie += \"; \" + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += \"=\" + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function getCookie(name: string): string | undefined {\r\n  const matches = document.cookie.match(\r\n    new RegExp(\r\n      \"(?:^|; )\" + name.replace(/([.$?*|{}()\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") + \"=([^;]*)\"\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, \"\", { expires: -1 });\r\n}\r\n"],"mappings":"AAAA;;AAEA,OAAO,SAASA,SAASA,CAACC,IAAY,EAAEC,KAAa,EAAEC,KAA8B,EAAE;EACrFA,KAAK,GAAGA,KAAK,IAAI,CAAC,CAAC;EACnB,IAAIC,GAAG,GAAGD,KAAK,CAACE,OAAO;EACvB,IAAI,OAAOD,GAAG,KAAK,QAAQ,IAAIA,GAAG,EAAE;IAClC,MAAME,CAAC,GAAG,IAAIC,IAAI,CAAC,CAAC;IACpBD,CAAC,CAACE,OAAO,CAACF,CAAC,CAACG,OAAO,CAAC,CAAC,GAAGL,GAAG,GAAG,IAAI,CAAC;IACnCA,GAAG,GAAGD,KAAK,CAACE,OAAO,GAAGC,CAAC;EACzB;EACA,IAAIF,GAAG,IAAIA,GAAG,CAACM,WAAW,EAAE;IAC1BP,KAAK,CAACE,OAAO,GAAGD,GAAG,CAACM,WAAW,CAAC,CAAC;EACnC;EACAR,KAAK,GAAGS,kBAAkB,CAACT,KAAK,CAAC;EACjC,IAAIU,aAAa,GAAGX,IAAI,GAAG,GAAG,GAAGC,KAAK;EACtC,KAAK,MAAMW,QAAQ,IAAIV,KAAK,EAAE;IAC5BS,aAAa,IAAI,IAAI,GAAGC,QAAQ;IAChC,MAAMC,SAAS,GAAGX,KAAK,CAACU,QAAQ,CAAC;IACjC,IAAIC,SAAS,KAAK,IAAI,EAAE;MACtBF,aAAa,IAAI,GAAG,GAAGE,SAAS;IAClC;EACF;EACAC,QAAQ,CAACC,MAAM,GAAGJ,aAAa;AACjC;AAEA,OAAO,SAASK,SAASA,CAAChB,IAAY,EAAsB;EAC1D,MAAMiB,OAAO,GAAGH,QAAQ,CAACC,MAAM,CAACG,KAAK,CACnC,IAAIC,MAAM,CACR,UAAU,GAAGnB,IAAI,CAACoB,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,GAAG,UACnE,CACF,CAAC;EACD,OAAOH,OAAO,GAAGI,kBAAkB,CAACJ,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGK,SAAS;AAC7D;AAEA,OAAO,SAASC,YAAYA,CAACvB,IAAY,EAAE;EACzCD,SAAS,CAACC,IAAI,EAAE,EAAE,EAAE;IAAEI,OAAO,EAAE,CAAC;EAAE,CAAC,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}